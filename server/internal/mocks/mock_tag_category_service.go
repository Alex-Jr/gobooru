// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"
	dtos "gobooru/internal/dtos"

	mock "github.com/stretchr/testify/mock"
)

// MockTagCategoryService is an autogenerated mock type for the TagCategoryService type
type MockTagCategoryService struct {
	mock.Mock
}

type MockTagCategoryService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTagCategoryService) EXPECT() *MockTagCategoryService_Expecter {
	return &MockTagCategoryService_Expecter{mock: &_m.Mock}
}

// List provides a mock function with given fields: ctx, _a1
func (_m *MockTagCategoryService) List(ctx context.Context, _a1 dtos.ListTagCategoryDTO) (dtos.ListTagCategoryResponseDTO, error) {
	ret := _m.Called(ctx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for List")
	}

	var r0 dtos.ListTagCategoryResponseDTO
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, dtos.ListTagCategoryDTO) (dtos.ListTagCategoryResponseDTO, error)); ok {
		return rf(ctx, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, dtos.ListTagCategoryDTO) dtos.ListTagCategoryResponseDTO); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Get(0).(dtos.ListTagCategoryResponseDTO)
	}

	if rf, ok := ret.Get(1).(func(context.Context, dtos.ListTagCategoryDTO) error); ok {
		r1 = rf(ctx, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockTagCategoryService_List_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'List'
type MockTagCategoryService_List_Call struct {
	*mock.Call
}

// List is a helper method to define mock.On call
//   - ctx context.Context
//   - _a1 dtos.ListTagCategoryDTO
func (_e *MockTagCategoryService_Expecter) List(ctx interface{}, _a1 interface{}) *MockTagCategoryService_List_Call {
	return &MockTagCategoryService_List_Call{Call: _e.mock.On("List", ctx, _a1)}
}

func (_c *MockTagCategoryService_List_Call) Run(run func(ctx context.Context, _a1 dtos.ListTagCategoryDTO)) *MockTagCategoryService_List_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(dtos.ListTagCategoryDTO))
	})
	return _c
}

func (_c *MockTagCategoryService_List_Call) Return(_a0 dtos.ListTagCategoryResponseDTO, _a1 error) *MockTagCategoryService_List_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockTagCategoryService_List_Call) RunAndReturn(run func(context.Context, dtos.ListTagCategoryDTO) (dtos.ListTagCategoryResponseDTO, error)) *MockTagCategoryService_List_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockTagCategoryService creates a new instance of MockTagCategoryService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTagCategoryService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTagCategoryService {
	mock := &MockTagCategoryService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
