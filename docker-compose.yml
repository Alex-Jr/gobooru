
name: gobooru

# contain all services
services:
  gobooru-client:
    container_name: gobooru-client
    # depends_on:
      # gobooru-server:
        # condition: service_healthy
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - REACT_APP_SERVER_URL=${SERVER_URL}
    restart: no
    #ports:
    #  - ${CLIENT_PORT}:80
    # healthcheck:
    #   test: [ "CMD-SHELL", "curl -sS http://localhost:80 || exit 1" ]
    #   interval: 60s
    #   timeout: 3s
    #   retries: 3
    networks:
      - default
      - nginx_proxy
  gobooru-server:
    container_name: gobooru-server
    user : "1000:1000"
    depends_on:
      gobooru-db:
        condition: service_healthy
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: no
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_SSLMODE=${DB_SSLMODE}
      - IQDB_URL=http://gobooru-iqdb:${IQDB_PORT}
      - STATIC_PATH=/app/data
      - CLIENT_URL=${CLIENT_URL}
    #ports:
    #  - ${SERVER_PORT}:8080
    # healthcheck:
    #   test: [ "CMD-SHELL", "wget -qO- http://localhost:8080/ping || exit 1" ]
    #   interval: 60s
    #   timeout: 3s
    #   retries: 3
    volumes:
      - server-data:/app/data
    networks:
      - default
      - nginx_proxy
  gobooru-db:
    container_name: gobooru-db
    image: postgres:16.1-alpine3.19
    restart: no
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "5450:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s  
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - default
      - nginx_proxy
  gobooru-iqdb:
    container_name: gobooru-iqdb
    user : "1000:1000"
    build:
      context: ./iqdb
      dockerfile: Dockerfile
    restart: no
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_SSLMODE=${DB_SSLMODE}
    # healthcheck:
    #   test: [ "CMD-SHELL", "wget -qO- http://localhost:8000 || exit 1" ]
    #   interval: 60s
    #   timeout: 3s
    #   retries: 3
    volumes:
      - server-data:/app/data
    networks:
      - default
      #- nginx_proxy

volumes:
  server-data: 
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /run/media/alex/4TB/docker-persistent/gobooru/server
  db-data: 
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/alex/Docker/data/gobooru


networks:
  default:
    name: gobooru-default
    internal: true
  nginx_proxy:
    external: true
